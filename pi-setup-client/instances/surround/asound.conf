#
# kudos: https://lichtmetzger.de/en/2014/04/22/better-stereo-to-5-1-upmix-on-linux-alsa-asoundrc/
#
#Define the default device via "aplay -l"
#My CM6206 is hw2:0
pcm.snd_card {
        type hw
        card 1
        device 0
}

#Define the default control
ctl.snd_card {
        type hw
        card 1
        device 0
}

#The following section generates a "Master" volume control
#My C-Media sound card doesn't have one so this is useful.
#If your soundcard isn't crap and already has a master volume control,
#choose: slave.pcm "duplex"
#and remove the pcm.softvol part
pcm.!default {
    type            plug
    slave.pcm       "duplex"
}

pcm.softvol {
    type            softvol
    slave {
	#redirects the output to duplex (instead of "hw:2,0"):
        pcm         "duplex"
    }
    control {
        name        "Master"
        card        1
    }
}

#This is the important section where choices have to be made.
#Do you want upmix, simple stereo or something other?
pcm.duplex {
    type asym
	# --This for the FreeSurround ALSA plugin you can find here:--
    # http://micosphere.free.fr/freesurround-alsa/downloads.html
    # This plugin makes all decisions for you.
    #  playback.pcm "freesurround"
    # --The following methods are traditional--
    # Upmix a stereo source to six speakers
    # Front Left and Front Right get duplicated to all others:
    playback.pcm "upmix"
    # When having a true 5.1 channel source, use dmixer:
    #  playback.pcm "dmixer"
    # When having a 5.1 channel source with a poor LFE channel, use this
    # It takes left and right and sends it to the sub
	# without touching the other channels:
    #  playback.pcm "51withsub"
    # stereo recording device
    capture.pcm "dsnooper"
    # mono (webcam) recording device
    #  capture.pcm "webcam"
}

#dmixer is the "central hub" that routes everything
# to the correct speaker as we defined it in "pcm.duplex"
pcm.dmixer {
    type dmix
    ipc_key 1024
    ipc_perm 0666
    slave.pcm "snd_card"
    slave {
        period_time 0
        period_size 1024
        buffer_size 4096
        channels 6
    }
    bindings {
        0 0
        1 1
        2 2
        3 3
        4 4
        5 5
    }
}

#This controls the recording device. It is only stereo and thus
#doesn't require anything fancy
pcm.dsnooper {
    type dsnoop
    ipc_key 2048
    ipc_perm 0666
    slave.pcm "snd_card"
    slave
    {
        period_time 0
        period_size 1024
        buffer_size 4096
        channels 2
    }
    bindings {
        0 0
        1 1
    }
}

#I have a mono webcam, that needs this to get audio
# working in Skype etc.
pcm.webcam {
    type dsnoop
    ipc_key 4096
    ipc_perm 0666
    slave.pcm "hw:3,0" #found webcam via aplay -l
    slave
    {
        channels 1
    }
    bindings {
        0 0
    }
}

# This for the FreeSurround ALSA plugin you can find here:
# http://micosphere.free.fr/freesurround-alsa/downloads.html
pcm.freesurround {
     type freesurround
     slave.pcm "snd_card" #surround51 for built-in default
}

# These are the custom routings I specified.
# Every speaker can be routed to another speaker,
# signals can be mixed etc.
pcm.upmix {
     type route
     slave.pcm dmixer
     slave.channels 6
     ttable.0.0 1 #left
     ttable.1.1 1 #right
     ttable.0.2 0.5 #half left to center
     ttable.1.2 0.5 #half right to center
     ttable.0.3 0.5 #half left to sub
     ttable.1.3 0.5 #half right to sub
     ttable.0.4 1 #left to rear left
     ttable.1.5 1 #right to rear right
}

pcm.51withsub {
     type route
     slave.pcm dmixer
     slave.channels 6
     #####  EINGANGSKANAL.AUSGANGSKANAL(0: links, 1: rechts) DÄMPFUNG
     ttable.0.0 1       # front links  -> 0: front links
     ttable.1.1 1       # front rechts -> 1: front rechts
     ttable.0.4 1       # front links  -> 4: rear links
     ttable.1.5 1       # front rechts -> 5: rear rechts
     ttable.0.2 0.5     # front links  -> 2: center * 0.5 (6dB Dämpfung ((0.707: 3dB))
     ttable.1.2 0.5     # front rechts -> 2: center * 0.5
     ttable.0.3 0.5     # front links  -> 3: woofer * 0.5
     ttable.1.3 0.5     # front rechts -> 3: woofer * 0.5
}

#Old stuff: for OSS compatibility using the aoss wrapper:
pcm.dsp0 {
    type plug
    slave.pcm "!default"
}